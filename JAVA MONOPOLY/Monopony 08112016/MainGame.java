/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monopony;

import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;


/**
 *
 * @author Phustih
 */
public class MainGame extends javax.swing.JFrame {

    /**
     * Creates new form MainGame
     */
    Player a ;

    private Map map;
    public MainGame() {
        map = new Map();
        initComponents();
        setAlwaysOnTop(true);
       a = new Player(0,"first",20000000);
        a.buy((Deed) map.getMap().get(1));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        board = new javax.swing.JLabel();
        dice1 = new javax.swing.JLabel();
        dice2 = new javax.swing.JLabel();
        roll = new javax.swing.JButton();
        totalRoll = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buyButt = new javax.swing.JButton();
        sellButt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 764));
        jPanel1.setLayout(null);

        board.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pic/board.jpg"))); // NOI18N
        board.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 4));
        board.setPreferredSize(new java.awt.Dimension(735, 735));
        jPanel1.add(board);
        board.setBounds(270, 0, 740, 740);

        dice1.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        dice1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        jPanel1.add(dice1);
        dice1.setBounds(1200, 530, 150, 150);

        dice2.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        dice2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        jPanel1.add(dice2);
        dice2.setBounds(1050, 530, 150, 150);

        roll.setText("Roll");
        roll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollActionPerformed(evt);
            }
        });
        jPanel1.add(roll);
        roll.setBounds(1140, 420, 80, 23);

        totalRoll.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        totalRoll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRoll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        jPanel1.add(totalRoll);
        totalRoll.setBounds(1150, 490, 100, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(map.getMap().get(1).getPic())));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 180, 160);

        buyButt.setText("Buy");
        buyButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtActionPerformed(evt);
            }
        });
        jPanel1.add(buyButt);
        buyButt.setBounds(1100, 160, 60, 30);

        sellButt.setText("Sell");
        sellButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtActionPerformed(evt);
            }
        });
        jPanel1.add(sellButt);
        sellButt.setBounds(1199, 160, 60, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollActionPerformed
        // TODO add your handling code here:
        Random rand = new Random();
        int n = rand.nextInt(6) + 1;        
        int n1 = rand.nextInt(6) + 1;
       
        Thread t = new Thread(new Runnable() {
            int i = 0;

            @Override
            public void run() {
                 int n2 = rand.nextInt(6) + 1;
                while (i < 15) { 
                    n2 = rand.nextInt(6) + 1;
                    dice1.setText(String.valueOf(n2));
                    try {
                        Thread.sleep(200);
                    } catch (Exception e) {
                        System.out.println("");
                    }
                    i++;
                    
                }
                dice1.setText(String.valueOf(n));                
            }
            
        });
        Thread t1 = new Thread(new Runnable() {
            int j = 0;

            @Override
            public void run() {
                int n3 = rand.nextInt(6) + 1;
                while (j < 15) {
                    n3 = rand.nextInt(6) + 1;
                    dice2.setText(String.valueOf(n3));
                    try {
                        Thread.sleep(200);
                    } catch (Exception e) {
                        System.out.println("");
                    }
                    j++;
                    
                }
                dice2.setText(String.valueOf(n1));  
                totalRoll.setVisible(true);
                totalRoll.setText(String.valueOf(n + n1));
            }
            
        });
        t.start();
        t1.start(); 
        /*try {
            t.join();
            t1.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        a.take_turn(Integer.parseInt(totalRoll.getText()));
        System.out.println(a.getIndex());

    }//GEN-LAST:event_rollActionPerformed

    private void buyButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtActionPerformed
        // TODO add your handling code here:
        if(map.getMap().get(a.getIndex()).getClass() == Deed.class){
            if(a.getDeeds().get(a.getIndex()).isBought() == false){
                buyButt.setText("Buy");
                a.getDeeds().add((Deed) map.getMap().get(a.getIndex()));
                a.getDeeds().get(a.getIndex()).setOwner(a);
                a.getDeeds().get(a.getIndex()).setBought(true);
            }
            else if(a.getDeeds().get(a.getIndex()).getHouse()>0 && a.getDeeds().get(a.getIndex()).getHouse()<=4 && a.getDeeds().get(a.getIndex()).isBought()){
                buyButt.setText("Buy House");
                a.getDeeds().get(a.getIndex()).add_house();
            }
            else if(a.getDeeds().get(a.getIndex()).getHouse() == 4 && a.getDeeds().get(a.getIndex()).isBought()){
                buyButt.setText("Buy Hotel");
                a.getDeeds().get(a.getIndex()).add_hotel();
            }
            
            
        }
        else if(map.getMap().get(a.getIndex()).equals(Station.class)){
            if(a.getStations().get(a.getIndex()).getOwner() == null){
                buyButt.setText("Buy");
                a.buy(a.getStations().get(a.getIndex()));
                a.getStations().get(a.getIndex()).setOwner(a);
                a.getStations().get(a.getIndex()).setBought(true);
            }
        }
    }//GEN-LAST:event_buyButtActionPerformed

    private void sellButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtActionPerformed
        // TODO add your handling code here:
        if(map.getMap().get(a.getIndex()).getClass() == Deed.class){
            if(a.getDeeds().get(a.getIndex()).isBought() && a.getDeeds().get(a.getIndex()).getHouse()==0){
                sellButt.setText("Sell");
                a.getDeeds().remove((Deed) map.getMap().get(a.getIndex()));
                a.getDeeds().get(a.getIndex()).setOwner(null);
                a.getDeeds().get(a.getIndex()).setBought(false);
            }
            else if(a.getDeeds().get(a.getIndex()).getHouse()>0 && a.getDeeds().get(a.getIndex()).getHouse()<=4 && a.getDeeds().get(a.getIndex()).isBought()){
                sellButt.setText("Sell House");
                a.getDeeds().get(a.getIndex()).remove_house();
            }
            else if(a.getDeeds().get(a.getIndex()).getHouse() == 4 && a.getDeeds().get(a.getIndex()).isBought()){
                sellButt.setText("Sell Hotel");
                a.getDeeds().get(a.getIndex()).remove_hotel();
            }
        }
        
        else if(map.getMap().get(a.getIndex()).equals(Station.class)){
            if(a.getStations().get(a.getIndex()).getOwner() != null){
                sellButt.setText("Sell");
                a.sell(a.getStations().get(a.getIndex()));
                a.getStations().get(a.getIndex()).setOwner(null);
                a.getStations().get(a.getIndex()).setBought(false);
            }
        }
    }//GEN-LAST:event_sellButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel board;
    private javax.swing.JButton buyButt;
    private javax.swing.JLabel dice1;
    private javax.swing.JLabel dice2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton roll;
    private javax.swing.JButton sellButt;
    private javax.swing.JLabel totalRoll;
    // End of variables declaration//GEN-END:variables
}
